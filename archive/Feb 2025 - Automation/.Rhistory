## Install the required package with:
## install.packages("RSocrata")
library("RSocrata") # to pull data
library(tidyverse)
# library(ggiraph) # interactive visualizations
# library(patchwork) # combining graphs
library(plotly)
library(paletteer)
token <- "jf4xLa0HDTlg6lCYSg6ZlZcbA"
email <- "madisonmerzke@yahoo.com"
pw <- "goodbyeKentucky2024!"
# Let's start with just looking at the overall trend over time
# Only grabbing what we need for each pull
overall <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&age_group=Overall&sex=Overall&race_ethnicity=Overall&site=Overall",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate)) %>%
select(weekly_rate, weekend_date)
by_raceeth <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&age_group=Overall&site=Overall&sex=Overall",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate)) %>%
select(weekly_rate, weekend_date, sex)
by_raceeth <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&age_group=Overall&site=Overall&sex=Overall",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate)) %>%
select(weekly_rate, weekend_date, race_ethnicity)
raceeth_graph <- by_raceeth %>%
ggplot(aes(weekend_date, weekly_rate, group = race_ethnicity)) +
geom_point(aes(text = paste0("On ", weekend_date,
", the weekly rate was ",
weekly_rate,
" for ", race_ethnicity, "."),
colour = weekly_rate)) +
geom_line(aes(alpha = 0.1)) +
labs(x = "MMWR Week Ending Date",
y = "Lab-Confirmed Flu Hospitalization Weekly Rate",
color = "Weekly Rate") +
theme_minimal() +
scale_color_paletteer_c("ggthemes::Red-Green-Gold Diverging",
direction = -1) +
ggtitle("Hospitalization Rate by Race and Ethnicity Over Time")
ggplotly(raceeth_graph, tooltip = c("text")) %>%
layout(xaxis = list(rangeslider = list(type = "date")))
highest_hosp <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&site=Overall&mmwr_year=2025.0",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate))
View(highest_hosp)
highest_hosp <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&mmwr_year=2025.0",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate))
View(highest_hosp)
highest_hosp <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?mmwr_year=2025.0",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate))
View(highest_hosp)
## Install the required package with:
## install.packages("RSocrata")
library("RSocrata") # to pull data
library(tidyverse)
# library(ggiraph) # interactive visualizations
# library(patchwork) # combining graphs
library(plotly)
library(paletteer)
token <- "jf4xLa0HDTlg6lCYSg6ZlZcbA"
email <- "madisonmerzke@yahoo.com"
pw <- "goodbyeKentucky2024!"
# Let's start with just looking at the overall trend over time
# Only grabbing what we need for each pull
overall <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&age_group=Overall&sex=Overall&race_ethnicity=Overall&site=Overall",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate)) %>%
select(weekly_rate, weekend_date)
View(overall)
#| column: screen
#| out-width: 100%
over_time <- overall %>%
ggplot(aes(weekend_date, weekly_rate, group = 1)) +
geom_point(aes(text = paste0("On ", weekend_date,
", the weekly rate was ",
weekly_rate,
"."),
colour = weekly_rate)) +
geom_line(aes(alpha = 0.1)) +
labs(x = "MMWR Week Ending Date",
y = "Lab-Confirmed Flu Hospitalization Weekly Rate",
color = "Weekly Rate") +
theme_minimal() +
scale_color_paletteer_c("ggthemes::Red-Green-Gold Diverging",
direction = -1) +
ggtitle("Hospitalization Rate by Week Over Time") +
geom_hline(yintercept = max(overall$weekly_rate),
linetype = "dashed", alpha = 0.5) +
annotate("text",
x = median(overall$weekend_date),
y = max(overall$weekly_rate)-0.5,
label = paste0("Highest rate on ",
overall[which.max(overall$weekly_rate),
]$weekend_date))
ggplotly(over_time, tooltip = c("text"))
by_age <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&sex=Overall&race_ethnicity=Overall&site=Overall",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate)) %>%
select(weekly_rate, weekend_date, age_group)
age_graph <- by_age %>%
ggplot(aes(weekend_date, weekly_rate, group = age_group)) +
geom_point(aes(text = paste0("On ", weekend_date,
", the weekly rate was ",
weekly_rate,
" for ", age_group, "."),
colour = weekly_rate)) +
geom_line(aes(alpha = 0.1)) +
labs(x = "MMWR Week Ending Date",
y = "Lab-Confirmed Flu Hospitalization Weekly Rate",
color = "Weekly Rate") +
theme_minimal() +
scale_color_paletteer_c("ggthemes::Red-Green-Gold Diverging",
direction = -1) +
ggtitle("Hospitalization Rate by Age Over Time",
# put subtitle into caption or something???
subtitle = paste0("Highest rate on ",
by_age[which.max(by_age$weekly_rate),
]$weekend_date,
" among ",
by_age[which.max(by_age$weekly_rate),
]$age_group))
ggplotly(age_graph, tooltip = c("text")) %>%
layout(xaxis = list(rangeslider = list(type = "date")))
library("RSocrata") # to pull data
library(tidyverse)
# library(ggiraph) # interactive visualizations
# library(patchwork) # combining graphs
library(plotly)
library(paletteer)
token <- "jf4xLa0HDTlg6lCYSg6ZlZcbA"
email <- "madisonmerzke@yahoo.com"
pw <- "goodbyeKentucky2024!"
highest_hosp <- read.socrata(
"https://data.cdc.gov/resource/kvib-3txy.json?mmwr_year=2025.0",
app_token = token,
email     = email,
password  = pw
) %>%
mutate(weekly_rate = as.numeric(weekly_rate),
weekend_date = as.Date(X_weekenddate))
View(highest_hosp)
